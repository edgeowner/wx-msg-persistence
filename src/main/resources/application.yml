eureka:
  instance:
    leaseRenewalIntervalInSeconds: 30
    metadata-map:
      management:
        context-path: ${server.servlet.context-path}/actuator
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}
    health-check-url-path: http://${eureka.instance.ip-address}:${server.port}${server.servlet.context-path}/actuator/health
    status-page-url: http://${eureka.instance.ip-address}:${server.port}${server.servlet.context-path}/actuator/info
    home-page-url: http://${eureka.instance.ip-address}:${server.port}${server.servlet.context-path}
    ip-address: 119.3.62.127
#    ip-address: 127.0.0.1
    prefer-ip-address: true

  client:
    registryFetchIntervalSeconds: 30
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL:http://47.110.251.61:8761}/eureka/
    #      defaultZone: ${EUREKA_SERVICE_URL:http://127.0.0.1:8761}/eureka/
    eureka-server-u-r-l-context: /wechat/euraka
    eureka-server-port: 8761


logging:
  config: classpath:log4j2.xml


# actuator
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    logfile:
      enabled: true
      external-file: /logs/kafka-consumer.log
    metrics:
      enabled: true

mybatis:
  # 扫描classpath下mapper目录下的所有.xml文件
  mapper-locations: classpath:mapper/*.xml
  # 实体类的包路径
  type-aliases-package: com.atmatrix.wechat.infrastructure.po
  # 开启驼峰匹配
  configuration:
    map-underscore-to-camel-case: true
    auto-mapping-behavior: full
    lazy-loading-enabled: true
    cache-enabled: true
    key-generators:



## 项目启动端口,默认8080
server:
  port: 4113
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    max-http-post-size: 8192000
    max-http-header-size: 1024000
  servlet:
    context-path: /wechat/persistence




spring:
  application:
    name: wx-msg-persistence

  aop:
    auto: true
    proxy-target-class: false
  datasource:
    name: druidDataSource
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
#    119.3.24.108:9001 172.16.0.59
#    url: jdbc:mysql://172.16.0.59:9001/wechat_msg?useSSL=false&requireSSL=false&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai
    url: jdbc:mysql://127.0.0.1:3306/wechat_msg?useSSL=false&requireSSL=false&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai
    username: wechat_msg
#    password: j8G&L4G^J9ui6789
    password: wechat_msg
    platform: mysql
    druid:
      connection-init-sqls: ["SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci"]
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall
      initial-size: 10
      min-idle: 5
      max-active: 20

      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: false
      maxPoolPreparedStatementPerConnectionSize: 20
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      log-abandoned: true
      web-stat-filter:
        enabled: true
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
        session-stat-enable: 'true'
        session-stat-max-count: 100000
        principal-session-name: admin
        profile-enable: 'true'
        url-pattern: '/*'
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: 123456
        reset-enable: false
      aop-patterns: com.atmatrix.wechat.*

      filter:
        stat:
          log-slow-sql: true
          db-type: mysql
          slow-sql-millis: 2000
        slf4j:
          enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true

  security:
    user:
      name: admin
      password: admin
      roles: ACTUATOR_ADMIN
  kafka:
    #    bootstrap-servers: 119.3.44.28:9092,119.3.47.237:9092,119.3.40.178:9092,119.3.42.210:9092
    bootstrap-servers: draftelf01:9092,draftelf02:9092,draftelf03:9092,draftelf04:9092
    template:
      default-topic:
    listener:
      concurrency: 3
    consumer:
      group-id: wx_msg_10
      enable-auto-commit: false
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

  servlet:
    multipart:
      enabled: true
      file-size-threshold: 0
      location:
      max-request-size: 10MB
      max-file-size: 8MB





#spring.aop.proxy-target-class=false